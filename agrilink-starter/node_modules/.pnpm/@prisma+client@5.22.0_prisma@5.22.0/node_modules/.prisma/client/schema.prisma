generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  role      String // FARMER | BUYER | INSPECTOR | ADMIN
  password  String
  createdAt DateTime  @default(now())
  farms     Farm[]
  sessions  Session[]
}

model Farm {
  id        String   @id @default(cuid())
  name      String
  district  String?
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  lots      Lot[]
  createdAt DateTime @default(now())
}

model Lot {
  id            String         @id @default(cuid())
  publicId      String         @unique
  farm          Farm           @relation(fields: [farmId], references: [id])
  farmId        String
  produce       String
  events        Event[]
  shipments     Shipment[]
  sensorDevices SensorDevice[]
  createdAt     DateTime       @default(now())
}

model Event {
  id    String   @id @default(cuid())
  lot   Lot      @relation(fields: [lotId], references: [id])
  lotId String
  type  String
  note  String?
  temp  Float?
  hum   Float?
  at    DateTime @default(now())
  place String?
}

model Shipment {
  id        String   @id @default(cuid())
  lot       Lot      @relation(fields: [lotId], references: [id])
  lotId     String
  status    String
  route     String?
  createdAt DateTime @default(now())
}

model Session {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  refreshToken String   @unique
  expiresAt    DateTime
  createdAt    DateTime @default(now())
}

model SensorDevice {
  id         String   @id @default(cuid())
  name       String
  apiKeyHash String   @unique
  boundLotId String?
  boundLot   Lot?     @relation(fields: [boundLotId], references: [id])
  createdAt  DateTime @default(now())
}
